# Single stage build for Railway - simpler and more reliable
FROM node:20-alpine

WORKDIR /app

# Install system dependencies
RUN apk add --no-cache python3 make g++ dumb-init

# Copy only package.json first (not package-lock)
COPY package.json ./

# Remove any cached package-lock.json that Railway might have
RUN rm -f package-lock.json npm-shrinkwrap.json

# Install ALL dependencies using npm install (not ci)
# This is more flexible and handles missing packages better
RUN npm install --legacy-peer-deps && \
    npm cache clean --force

# Copy source code
COPY . .

# Build TypeScript
RUN npm run build

# Create non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001

# Change ownership
RUN chown -R nodejs:nodejs /app

# Switch to non-root user
USER nodejs

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=120s --retries=5 \
  CMD node -e "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1); })"

# Use dumb-init to handle signals
ENTRYPOINT ["dumb-init", "--"]

# Start the application directly (migrations handled by start script)
CMD ["node", "scripts/start-production.js"]