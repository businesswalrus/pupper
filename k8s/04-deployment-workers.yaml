apiVersion: apps/v1
kind: Deployment
metadata:
  name: pup-ai-workers
  namespace: pup-ai
  labels:
    app: pup-ai
    component: workers
    version: v2.0.0
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: pup-ai
      component: workers
  template:
    metadata:
      labels:
        app: pup-ai
        component: workers
        version: v2.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9091"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: pup-ai
      securityContext:
        runAsNonRoot: true
        runAsUser: 10001
        runAsGroup: 10001
        fsGroup: 10001
      
      containers:
      # Embedding worker
      - name: embedding-worker
        image: your-registry.com/pup-ai:v2.0.0
        command: ["node", "dist/workers/embeddings.js"]
        env:
        - name: WORKER_TYPE
          value: "embeddings"
        - name: WORKER_CONCURRENCY
          value: "3"
        envFrom:
        - configMapRef:
            name: pup-ai-config
        - secretRef:
            name: pup-ai-secrets
        resources:
          requests:
            cpu: 250m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 1Gi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
      
      # Summary worker
      - name: summary-worker
        image: your-registry.com/pup-ai:v2.0.0
        command: ["node", "dist/workers/summarizer.js"]
        env:
        - name: WORKER_TYPE
          value: "summaries"
        - name: WORKER_CONCURRENCY
          value: "2"
        envFrom:
        - configMapRef:
            name: pup-ai-config
        - secretRef:
            name: pup-ai-secrets
        resources:
          requests:
            cpu: 250m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 1Gi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
      
      # Profile worker
      - name: profile-worker
        image: your-registry.com/pup-ai:v2.0.0
        command: ["node", "dist/workers/profiler.js"]
        env:
        - name: WORKER_TYPE
          value: "profiles"
        - name: WORKER_CONCURRENCY
          value: "2"
        envFrom:
        - configMapRef:
            name: pup-ai-config
        - secretRef:
            name: pup-ai-secrets
        resources:
          requests:
            cpu: 250m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 1Gi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
      
      volumes:
      - name: tmp
        emptyDir:
          sizeLimit: 1Gi
      
      terminationGracePeriodSeconds: 120
---
# HPA for worker scaling
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: pup-ai-workers-hpa
  namespace: pup-ai
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: pup-ai-workers
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  # Custom metrics from Prometheus
  - type: Pods
    pods:
      metric:
        name: bullmq_queue_waiting_jobs
      target:
        type: AverageValue
        averageValue: "50"
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 30
      - type: Pods
        value: 2
        periodSeconds: 60