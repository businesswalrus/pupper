apiVersion: apps/v1
kind: Deployment
metadata:
  name: pup-ai
  namespace: pup-ai
  labels:
    app: pup-ai
    component: bot
    version: v2.0.0
  annotations:
    kubernetes.io/description: "Context-aware Slack bot with personality and memory"
spec:
  replicas: 3
  revisionHistoryLimit: 10
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: pup-ai
      component: bot
  template:
    metadata:
      labels:
        app: pup-ai
        component: bot
        version: v2.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: pup-ai
      automountServiceAccountToken: true
      securityContext:
        runAsNonRoot: true
        runAsUser: 10001
        runAsGroup: 10001
        fsGroup: 10001
        seccompProfile:
          type: RuntimeDefault
      
      # Anti-affinity for high availability
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - pup-ai
              topologyKey: kubernetes.io/hostname
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/worker
                operator: Exists
      
      # Topology spread for even distribution
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app: pup-ai
      
      containers:
      - name: pup-ai
        image: your-registry.com/pup-ai:v2.0.0
        imagePullPolicy: IfNotPresent
        
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        
        env:
        # Downward API for pod information
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        
        # Memory limits for Node.js
        - name: NODE_OPTIONS
          value: "--max-old-space-size=3584 --enable-source-maps"
        
        envFrom:
        - configMapRef:
            name: pup-ai-config
        - secretRef:
            name: pup-ai-secrets
        
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
            ephemeral-storage: 1Gi
          limits:
            cpu: 2000m
            memory: 4Gi
            ephemeral-storage: 2Gi
        
        # Probes for health monitoring
        startupProbe:
          httpGet:
            path: /health
            port: http
            httpHeaders:
            - name: X-Probe-Type
              value: startup
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        
        livenessProbe:
          httpGet:
            path: /health
            port: http
            httpHeaders:
            - name: X-Probe-Type
              value: liveness
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /health
            port: http
            httpHeaders:
            - name: X-Probe-Type
              value: readiness
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: logs
          mountPath: /app/logs
        - name: cache
          mountPath: /app/.cache
      
      # Init container for database migrations
      initContainers:
      - name: db-migrate
        image: your-registry.com/pup-ai:v2.0.0
        command: ["npm", "run", "db:migrate"]
        envFrom:
        - configMapRef:
            name: pup-ai-config
        - secretRef:
            name: pup-ai-secrets
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
      
      volumes:
      - name: tmp
        emptyDir:
          sizeLimit: 1Gi
      - name: logs
        emptyDir:
          sizeLimit: 2Gi
      - name: cache
        emptyDir:
          sizeLimit: 1Gi
      
      # DNS configuration for better performance
      dnsPolicy: ClusterFirst
      dnsConfig:
        options:
        - name: ndots
          value: "2"
        - name: edns0
      
      # Graceful shutdown
      terminationGracePeriodSeconds: 60
      
      # Priority class for critical workloads
      priorityClassName: high-priority
      
      # Image pull secrets if using private registry
      imagePullSecrets:
      - name: registry-credentials